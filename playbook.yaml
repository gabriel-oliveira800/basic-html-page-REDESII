---
- name: Instalar e configurar o ContainerD
  hosts: all
  tasks:
    - name: Instalação dos módulos do Kernel Linux
      ansible.builtin.copy:
        src: ./containerd.conf
        dest: /etc/modules-load.d/k8s.conf
        mode: "644"

    - name: Adicionando o overlay
      modprobe:
        name: overlay
        state: present

    - name: Adicionando o br_netfilter
      modprobe:
        name: br_netfilter
        state: present

    - name: Configuração dos parâmetros do sysctl
      ansible.builtin.copy:
        src: ./sysctl.conf
        dest: /etc/sysctl.d/k8s.conf
        mode: "644"

    - name: Executando o comando sysctl para aplicar as configurações
      command: "sysctl --system"

    - name: Adicionar a chave GPG do repositório do Docker
      apt-key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adicionando o repositório para instalar o ContainerD
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Instalação do ContainerD
      apt:
        name: containerd.io=1.6.12-1
        update_cache: yes

    - name: Configuração do ContainerD
      file:
        path: /etc/containerd
        state: directory
        owner: root
        group: root
        mode: 0644

    - name: Copiando o arquivo de configuração do ContainerD
      shell: containerd config default > /etc/containerd/config.toml

    - name: Alterando o arquivo de configuração do ContainerD
      command: sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

    - name: Reiniciando o ContainerD
      ansible.builtin.service:
        name: containerd
        state: restarted

- name: Instalação do kubeadm, kubelet e do kubectl
  hosts: all
  tasks:
    - name: Instalação dos pacoetes requeridos
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
        state: present

    - name: Adicionando a chave GPG do repositório do Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adicionando o repositório para instalar o Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Instalação dos pacotes kubeadm, kubelet e do kubectl
      apt:
        pkg:
          - kubectl=1.26.0-00
          - kubeadm=1.26.0-00
          - kubelet=1.26.0-00
      state: present

- name: Criado setup do cluster Kubernetes
  hosts: control_plane
  tasks:
    - name: Inicializando o cluster
      command: kubeadm init

    - name: Criação do diretório .kube
      file:
        path: ~/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0644

    - name: Copiando o arquivo de configuração do Kubernetes
      copy:
        dest: ~/.kube/config
        src: /etc/kubernetes/admin.conf
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0640

    - name: Instalando o Calico para interface de rede do Kubernetes
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

    - name: Criando o comando para adicionar os nodes ao cluster
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Adicionar o comando de join no fact
      set_fact: join_command="{{ join_command_raw.stdout }}"

- name: Adicionando os nodes ao cluster Kubernetes
  hosts: worker_node
  tasks:
    - name: Limpando o ambiente
      command: kubeadm reset -f

    - name: Adicionando o node ao cluster com comando de join
      command: "{{ hostvars[groups['control_plane'][0]['join_command']] }}"
